"use strict";(self.webpackChunklangflow_docs=self.webpackChunklangflow_docs||[]).push([[7338],{5056:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>i,default:()=>o,frontMatter:()=>d,metadata:()=>l,toc:()=>h});var r=s(4848),n=s(8453);const d={title:"Helpers",sidebar_position:2,slug:"/components-helpers"},i="Helpers",l={id:"Components/components-helpers",title:"Helpers",description:"Helper components provide utility functions to help manage data, tasks, and other components in your flow.",source:"@site/docs/Components/components-helpers.md",sourceDirName:"Components",slug:"/components-helpers",permalink:"/law-langflow/components-helpers",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Helpers",sidebar_position:2,slug:"/components-helpers"},sidebar:"defaultSidebar",previous:{title:"Inputs & Outputs",permalink:"/law-langflow/components-io"},next:{title:"File Outputs",permalink:"/law-langflow/components-file-outputs"}},a={},h=[{value:"Chat Memory",id:"chat-memory",level:2},{value:"Parameters",id:"parameters",level:3},{value:"Inputs",id:"inputs",level:4},{value:"Outputs",id:"outputs",level:4},{value:"Combine Text",id:"combine-text",level:2},{value:"Parameters",id:"parameters-1",level:3},{value:"Inputs",id:"inputs-1",level:4},{value:"Create List",id:"create-list",level:2},{value:"Parameters",id:"parameters-2",level:3},{value:"Inputs",id:"inputs-2",level:4},{value:"Custom Component",id:"custom-component",level:2},{value:"Filter Data",id:"filter-data",level:2},{value:"Parameters",id:"parameters-3",level:3},{value:"Inputs",id:"inputs-3",level:4},{value:"Outputs",id:"outputs-1",level:4},{value:"Hierarchical Task",id:"hierarchical-task",level:2},{value:"Parameters",id:"parameters-4",level:3},{value:"Inputs",id:"inputs-4",level:4},{value:"Outputs",id:"outputs-2",level:4},{value:"ID Generator",id:"id-generator",level:2},{value:"Parameters",id:"parameters-5",level:3},{value:"Outputs",id:"outputs-3",level:4},{value:"Merge Data 1 and 2",id:"merge-data-1-and-2",level:2},{value:"Output Parser",id:"output-parser",level:2},{value:"Parse Data",id:"parse-data",level:2},{value:"Parameters",id:"parameters-6",level:3},{value:"Inputs",id:"inputs-5",level:4},{value:"Outputs",id:"outputs-4",level:4},{value:"Parse Data to Text",id:"parse-data-to-text",level:2},{value:"Parameters",id:"parameters-7",level:3},{value:"Inputs",id:"inputs-6",level:4},{value:"Outputs",id:"outputs-5",level:4},{value:"Sequential Task",id:"sequential-task",level:2},{value:"Parameters",id:"parameters-8",level:3},{value:"Inputs",id:"inputs-7",level:4},{value:"Outputs",id:"outputs-6",level:4},{value:"Split Text",id:"split-text",level:2},{value:"Parameters",id:"parameters-9",level:3},{value:"Inputs",id:"inputs-8",level:4},{value:"Store Message",id:"store-message",level:2},{value:"Parameters",id:"parameters-10",level:3},{value:"Inputs",id:"inputs-9",level:4},{value:"Outputs",id:"outputs-7",level:4}];function c(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"helpers",children:"Helpers"}),"\n",(0,r.jsx)(t.p,{children:"Helper components provide utility functions to help manage data, tasks, and other components in your flow."}),"\n",(0,r.jsx)(t.h2,{id:"chat-memory",children:"Chat Memory"}),"\n",(0,r.jsx)(t.p,{children:"This component retrieves and manages chat messages from Langflow tables or an external memory."}),"\n",(0,r.jsx)(t.h3,{id:"parameters",children:"Parameters"}),"\n",(0,r.jsx)(t.h4,{id:"inputs",children:"Inputs"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"memory"}),(0,r.jsx)(t.td,{children:"External Memory"}),(0,r.jsx)(t.td,{children:"Retrieve messages from an external memory. If empty, it will use the Langflow tables."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"sender"}),(0,r.jsx)(t.td,{children:"Sender Type"}),(0,r.jsx)(t.td,{children:"Filter by sender type."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"sender_name"}),(0,r.jsx)(t.td,{children:"Sender Name"}),(0,r.jsx)(t.td,{children:"Filter by sender name."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"n_messages"}),(0,r.jsx)(t.td,{children:"Number of Messages"}),(0,r.jsx)(t.td,{children:"Number of messages to retrieve."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"session_id"}),(0,r.jsx)(t.td,{children:"Session ID"}),(0,r.jsx)(t.td,{children:"The session ID of the chat. If empty, the current session ID parameter will be used."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"order"}),(0,r.jsx)(t.td,{children:"Order"}),(0,r.jsx)(t.td,{children:"Order of the messages."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"template"}),(0,r.jsx)(t.td,{children:"Template"}),(0,r.jsxs)(t.td,{children:["The template to use for formatting the data. It can contain the keys ",(0,r.jsx)(t.code,{children:"{text}"}),", ",(0,r.jsx)(t.code,{children:"{sender}"})," or any other key in the message data."]})]})]})]}),"\n",(0,r.jsx)(t.h4,{id:"outputs",children:"Outputs"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"messages"}),(0,r.jsx)(t.td,{children:"Messages (Data)"}),(0,r.jsx)(t.td,{children:"Retrieved messages as Data objects."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"messages_text"}),(0,r.jsx)(t.td,{children:"Messages (Text)"}),(0,r.jsx)(t.td,{children:"Retrieved messages formatted as text."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"lc_memory"}),(0,r.jsx)(t.td,{children:"Memory"}),(0,r.jsx)(t.td,{children:"Built LangChain memory object."})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"combine-text",children:"Combine Text"}),"\n",(0,r.jsx)(t.p,{children:"This component concatenates two text sources into a single text chunk using a specified delimiter."}),"\n",(0,r.jsx)(t.h3,{id:"parameters-1",children:"Parameters"}),"\n",(0,r.jsx)(t.h4,{id:"inputs-1",children:"Inputs"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"first_text"}),(0,r.jsx)(t.td,{children:"First Text"}),(0,r.jsx)(t.td,{children:"The first text input to concatenate."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"second_text"}),(0,r.jsx)(t.td,{children:"Second Text"}),(0,r.jsx)(t.td,{children:"The second text input to concatenate."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"delimiter"}),(0,r.jsx)(t.td,{children:"Delimiter"}),(0,r.jsx)(t.td,{children:"A string used to separate the two text inputs. Defaults to a space."})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"create-list",children:"Create List"}),"\n",(0,r.jsx)(t.p,{children:"This component dynamically creates a record with a specified number of fields."}),"\n",(0,r.jsx)(t.h3,{id:"parameters-2",children:"Parameters"}),"\n",(0,r.jsx)(t.h4,{id:"inputs-2",children:"Inputs"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"n_fields"}),(0,r.jsx)(t.td,{children:"Number of Fields"}),(0,r.jsx)(t.td,{children:"Number of fields to be added to the record."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"text_key"}),(0,r.jsx)(t.td,{children:"Text Key"}),(0,r.jsx)(t.td,{children:"Key used as text."})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"custom-component",children:"Custom Component"}),"\n",(0,r.jsx)(t.p,{children:"Use this component as a template to create your custom component."}),"\n",(0,r.jsx)(t.h2,{id:"filter-data",children:"Filter Data"}),"\n",(0,r.jsx)(t.p,{children:"This component filters a column against an match text with an operator"}),"\n",(0,r.jsx)(t.h3,{id:"parameters-3",children:"Parameters"}),"\n",(0,r.jsx)(t.h4,{id:"inputs-3",children:"Inputs"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"data"}),(0,r.jsx)(t.td,{children:"Data"}),(0,r.jsx)(t.td,{children:"Your Data table"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"column"}),(0,r.jsx)(t.td,{children:"Column name"}),(0,r.jsx)(t.td,{children:"The name of the column"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"text_compare"}),(0,r.jsx)(t.td,{children:"Match Text"}),(0,r.jsx)(t.td,{children:"The text input to compare against"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"operator"}),(0,r.jsx)(t.td,{children:"Operator"}),(0,r.jsx)(t.td,{children:"The operator to apply for comparing the texts"})]})]})]}),"\n",(0,r.jsx)(t.h4,{id:"outputs-1",children:"Outputs"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"filtered_data"}),(0,r.jsx)(t.td,{children:"Filtered Data"}),(0,r.jsx)(t.td,{children:"The filtered Data"})]})})]}),"\n",(0,r.jsx)(t.h2,{id:"hierarchical-task",children:"Hierarchical Task"}),"\n",(0,r.jsx)(t.p,{children:"This component creates and manages hierarchical tasks for CrewAI agents in a Playground environment."}),"\n",(0,r.jsxs)(t.p,{children:["For more information, see the ",(0,r.jsx)(t.a,{href:"https://docs.crewai.com/how-to/Hierarchical/",children:"CrewAI documentation"}),"."]}),"\n",(0,r.jsx)(t.h3,{id:"parameters-4",children:"Parameters"}),"\n",(0,r.jsx)(t.h4,{id:"inputs-4",children:"Inputs"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"task_description"}),(0,r.jsx)(t.td,{children:"Description"}),(0,r.jsx)(t.td,{children:"Descriptive text detailing task's purpose and execution."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"expected_output"}),(0,r.jsx)(t.td,{children:"Expected Output"}),(0,r.jsx)(t.td,{children:"Clear definition of expected task outcome."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"tools"}),(0,r.jsx)(t.td,{children:"Tools"}),(0,r.jsx)(t.td,{children:"List of tools/resources limited for task execution. Uses the Agent tools by default."})]})]})]}),"\n",(0,r.jsx)(t.h4,{id:"outputs-2",children:"Outputs"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"task_output"}),(0,r.jsx)(t.td,{children:"Task"}),(0,r.jsx)(t.td,{children:"The built hierarchical task."})]})})]}),"\n",(0,r.jsx)(t.h2,{id:"id-generator",children:"ID Generator"}),"\n",(0,r.jsx)(t.p,{children:"This component generates a unique ID."}),"\n",(0,r.jsx)(t.h3,{id:"parameters-5",children:"Parameters"}),"\n",(0,r.jsx)(t.h4,{id:"outputs-3",children:"Outputs"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"value"}),(0,r.jsx)(t.td,{children:"Value"}),(0,r.jsx)(t.td,{children:"Unique ID generated."})]})})]}),"\n",(0,r.jsx)(t.h2,{id:"merge-data-1-and-2",children:"Merge Data 1 and 2"}),"\n",(0,r.jsx)(t.p,{children:"With this Component you can Merge to Data tables into one Data table. You need to use Part 1 and 2."}),"\n",(0,r.jsx)(t.h2,{id:"output-parser",children:"Output Parser"}),"\n",(0,r.jsx)(t.p,{children:"Parse the output of an LLM into specified ouput. You have to put this Component into a prompt Component."}),"\n",(0,r.jsx)(t.h2,{id:"parse-data",children:"Parse Data"}),"\n",(0,r.jsx)(t.p,{children:"The ParseData component converts Data objects into plain text or a Data Object using a specified template.\nThis component transforms structured data into human-readable text formats, allowing for customizable output through the use of templates."}),"\n",(0,r.jsx)(t.h3,{id:"parameters-6",children:"Parameters"}),"\n",(0,r.jsx)(t.h4,{id:"inputs-5",children:"Inputs"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"data"}),(0,r.jsx)(t.td,{children:"Data"}),(0,r.jsx)(t.td,{children:"The data to convert to text"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"template"}),(0,r.jsx)(t.td,{children:"Template"}),(0,r.jsxs)(t.td,{children:["The template to use for formatting the data. It can contain the keys ",(0,r.jsx)(t.code,{children:"{text}"}),", ",(0,r.jsx)(t.code,{children:"{data}"})," or any other key in the Data"]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"sep"}),(0,r.jsx)(t.td,{children:"Separator"}),(0,r.jsx)(t.td,{children:"The separator to use between multiple data items"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"dataList"}),(0,r.jsx)(t.td,{children:"Data as List"}),(0,r.jsx)(t.td,{children:"Check this if you want the Data as list"})]})]})]}),"\n",(0,r.jsx)(t.h4,{id:"outputs-4",children:"Outputs"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"text"}),(0,r.jsx)(t.td,{children:"Text"}),(0,r.jsx)(t.td,{children:"The resulting formatted text string as a Message or Data object"})]})})]}),"\n",(0,r.jsx)(t.h2,{id:"parse-data-to-text",children:"Parse Data to Text"}),"\n",(0,r.jsx)(t.p,{children:"The ParseData component converts Data objects into plain text  using a specified template.\nThis component transforms structured data into human-readable text formats, allowing for customizable output through the use of templates."}),"\n",(0,r.jsx)(t.h3,{id:"parameters-7",children:"Parameters"}),"\n",(0,r.jsx)(t.h4,{id:"inputs-6",children:"Inputs"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"data"}),(0,r.jsx)(t.td,{children:"Data"}),(0,r.jsx)(t.td,{children:"The data to convert to text"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"template"}),(0,r.jsx)(t.td,{children:"Template"}),(0,r.jsxs)(t.td,{children:["The template to use for formatting the data. It can contain the keys ",(0,r.jsx)(t.code,{children:"{text}"}),", ",(0,r.jsx)(t.code,{children:"{data}"})," or any other key in the Data"]})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"sep"}),(0,r.jsx)(t.td,{children:"Separator"}),(0,r.jsx)(t.td,{children:"The separator to use between multiple data items"})]})]})]}),"\n",(0,r.jsx)(t.h4,{id:"outputs-5",children:"Outputs"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"text"}),(0,r.jsx)(t.td,{children:"Text"}),(0,r.jsx)(t.td,{children:"The resulting formatted text string as a Message object"})]})})]}),"\n",(0,r.jsx)(t.h2,{id:"sequential-task",children:"Sequential Task"}),"\n",(0,r.jsx)(t.p,{children:"This component creates and manage sequential tasks for CrewAI agents. It builds a SequentialTask object with the provided description, expected output, and agent, allowing for the specification of tools and asynchronous execution."}),"\n",(0,r.jsxs)(t.p,{children:["For more information, see the ",(0,r.jsx)(t.a,{href:"https://docs.crewai.com/how-to/Sequential/",children:"CrewAI documentation"}),"."]}),"\n",(0,r.jsx)(t.h3,{id:"parameters-8",children:"Parameters"}),"\n",(0,r.jsx)(t.h4,{id:"inputs-7",children:"Inputs"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"task_description"}),(0,r.jsx)(t.td,{children:"Description"}),(0,r.jsx)(t.td,{children:"Descriptive text detailing task's purpose and execution."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"expected_output"}),(0,r.jsx)(t.td,{children:"Expected Output"}),(0,r.jsx)(t.td,{children:"Clear definition of expected task outcome."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"tools"}),(0,r.jsx)(t.td,{children:"Tools"}),(0,r.jsx)(t.td,{children:"List of tools/resources limited for task execution. Uses the Agent tools by default."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"agent"}),(0,r.jsx)(t.td,{children:"Agent"}),(0,r.jsx)(t.td,{children:"CrewAI Agent that will perform the task."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"task"}),(0,r.jsx)(t.td,{children:"Task"}),(0,r.jsx)(t.td,{children:"CrewAI Task that will perform the task."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"async_execution"}),(0,r.jsx)(t.td,{children:"Async Execution"}),(0,r.jsx)(t.td,{children:"Boolean flag indicating asynchronous task execution."})]})]})]}),"\n",(0,r.jsx)(t.h4,{id:"outputs-6",children:"Outputs"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"task_output"}),(0,r.jsx)(t.td,{children:"Task"}),(0,r.jsx)(t.td,{children:"The built sequential task or list of tasks."})]})})]}),"\n",(0,r.jsx)(t.h2,{id:"split-text",children:"Split Text"}),"\n",(0,r.jsx)(t.p,{children:"This component splits text into chunks of a specified length."}),"\n",(0,r.jsx)(t.h3,{id:"parameters-9",children:"Parameters"}),"\n",(0,r.jsx)(t.h4,{id:"inputs-8",children:"Inputs"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"texts"}),(0,r.jsx)(t.td,{children:"Texts"}),(0,r.jsx)(t.td,{children:"Texts to split."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"separators"}),(0,r.jsx)(t.td,{children:"Separators"}),(0,r.jsx)(t.td,{children:"Characters to split on. Defaults to a space."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"max_chunk_size"}),(0,r.jsx)(t.td,{children:"Max Chunk Size"}),(0,r.jsx)(t.td,{children:"The maximum length (in characters) of each chunk."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"chunk_overlap"}),(0,r.jsx)(t.td,{children:"Chunk Overlap"}),(0,r.jsx)(t.td,{children:"The amount of character overlap between chunks."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"recursive"}),(0,r.jsx)(t.td,{children:"Recursive"}),(0,r.jsx)(t.td,{children:"Whether to split recursively."})]})]})]}),"\n",(0,r.jsx)(t.h2,{id:"store-message",children:"Store Message"}),"\n",(0,r.jsx)(t.p,{children:"This component stores chat messages or text into Langflow tables or an external memory."}),"\n",(0,r.jsx)(t.p,{children:"It provides flexibility in managing message storage and retrieval within a chat system."}),"\n",(0,r.jsx)(t.h3,{id:"parameters-10",children:"Parameters"}),"\n",(0,r.jsx)(t.h4,{id:"inputs-9",children:"Inputs"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"message"}),(0,r.jsx)(t.td,{children:"Message"}),(0,r.jsx)(t.td,{children:"The chat message to be stored. (Required)"})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"memory"}),(0,r.jsx)(t.td,{children:"External Memory"}),(0,r.jsx)(t.td,{children:"The external memory to store the message. If empty, it will use the Langflow tables."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"sender"}),(0,r.jsx)(t.td,{children:"Sender"}),(0,r.jsx)(t.td,{children:"The sender of the message. Can be Machine or User. If empty, the current sender parameter will be used."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"sender_name"}),(0,r.jsx)(t.td,{children:"Sender Name"}),(0,r.jsx)(t.td,{children:"The name of the sender. Can be AI or User. If empty, the current sender parameter will be used."})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"session_id"}),(0,r.jsx)(t.td,{children:"Session ID"}),(0,r.jsx)(t.td,{children:"The session ID of the chat. If empty, the current session ID parameter will be used."})]})]})]}),"\n",(0,r.jsx)(t.h4,{id:"outputs-7",children:"Outputs"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"Name"}),(0,r.jsx)(t.th,{children:"Display Name"}),(0,r.jsx)(t.th,{children:"Info"})]})}),(0,r.jsx)(t.tbody,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"stored_messages"}),(0,r.jsx)(t.td,{children:"Stored Messages"}),(0,r.jsx)(t.td,{children:"The list of stored messages after the current message has been added."})]})})]})]})}function o(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>l});var r=s(6540);const n={},d=r.createContext(n);function i(e){const t=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),r.createElement(d.Provider,{value:t},e.children)}}}]);